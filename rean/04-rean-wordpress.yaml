AWSTemplateFormatVersion: '2010-09-09'
Description: Launch a new Wordpress machine with CloudFormation for REAN Cloud
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  VpcId:
    Description: VPC to use
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Subnet to use
    Type: AWS::EC2::Subnet::Id
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    Default: wordpressdb
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    Default: Redhat80
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBRootPassword:
    Default: Redhat80
    NoEcho: 'true'
    Description: MySQL root password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  TenantTag:
    Description: Value for the Tenant tag
    Type: String
    Default: Rean-Cloud
  SecurityLevelTag:
    Description: Value for the Security tag
    Type: String
    AllowedValues:
      - Standard
      - FedRAMP
      - HIPAA
    Default: HIPAA
  POCTag:
    Description: Value for the Point of Contact tag
    Type: String
    Default: Nick Martinelli
  CreatorTag:
    Description: Value for the Creator tag
    Type: String
    Default: Samal Dimdung
  CostCenterTag:
    Description: VAlue for the Cost Center tag
    Type: String
    Default: DevOps-108
  EnviornmentTag:
    Description: ' Value for the Enviornment tag'
    Type: String
    AllowedValues:
      - Mgmt
      - Dev
      - Test
      - Prod
    Default: Mgmt
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-22111148
      HVM64: ami-08111162
      HVMG2: ami-ebcec381
    us-west-2:
      PV64: ami-792bc219
      HVM64: ami-c229c0a2
      HVMG2: ami-0f28c06f
    us-west-1:
      PV64: ami-0e087a6e
      HVM64: ami-1b0f7d7b
      HVMG2: ami-ab9defcb
    eu-west-1:
      PV64: ami-a5368cd6
      HVM64: ami-31328842
      HVMG2: ami-d1d652a2
    eu-central-1:
      PV64: ami-2bde3944
      HVM64: ami-e2df388d
      HVMG2: ami-5240a73d
    ap-northeast-1:
      PV64: ami-37020959
      HVM64: ami-f80e0596
      HVMG2: ami-34a9a35a
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-6598510b
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-ff0cc79c
      HVM64: ami-e90dc68a
      HVMG2: ami-6f6ca70c
    ap-southeast-2:
      PV64: ami-f5210196
      HVM64: ami-f2210191
      HVMG2: ami-88c1e1eb
    sa-east-1:
      PV64: ami-661e930a
      HVM64: ami-1e159872
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-08ef2465
      HVM64: ami-49e22924
      HVMG2: NOT_SUPPORTED
Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 locked down to the load balancer
        + SSH access
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: SG-Shared-Web
        - Key: Tenant
          Value: !Ref 'TenantTag'
        - Key: SecurityLevel
          Value: !Ref 'SecurityLevelTag'
        - Key: POC
          Value: !Ref 'POCTag'
        - Key: Creator
          Value: !Ref 'CreatorTag'
        - Key: CostCenter
          Value: !Ref 'CostCenterTag'
        - Key: Environment
          Value: !Ref 'EnviornmentTag'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'SSHLocation'
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress_install:
            - install_cfn
            - install_wordpress
            - configure_wordpress
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join ['', ["[main]\n", stack=, !Ref 'AWS::StackId', "\n",
                  region=, !Ref 'AWS::Region', "\n"]]
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join ['', ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n",
                  "path=Resources.WebServer.Metadata.AWS::CloudFormation::Init\n",
                  'action=/opt/aws/bin/cfn-init -v ', '         --stack ', !Ref 'AWS::StackName',
                  '         --resource WebServer ', '         --configsets wordpress_install ',
                  '         --region ', !Ref 'AWS::Region', "\n"]]
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        install_wordpress:
          packages:
            yum:
              php: []
              php-mysql: []
              mysql: []
              mysql-server: []
              mysql-devel: []
              mysql-libs: []
              httpd: []
          sources:
            /var/www/html: http://wordpress.org/latest.tar.gz
          files:
            /tmp/setup.mysql:
              content: !Join ['', ['CREATE DATABASE ', !Ref 'DBName', ";\n", CREATE
                    USER ', !Ref 'DBUser', '''@''localhost'' IDENTIFIED BY ''', !Ref 'DBPassword',
                  "';\n", 'GRANT ALL ON ', !Ref 'DBName', .* TO ', !Ref 'DBUser',
                  "'@'localhost';\n", "FLUSH PRIVILEGES;\n"]]
              mode: '000400'
              owner: root
              group: root
            /tmp/create-wp-config:
              content: !Join ['', ["#!/bin/bash -xe\n", "cp /var/www/html/wordpress/wp-config-sample.php\
                    \ /var/www/html/wordpress/wp-config.php\n", sed -i "s/'database_name_here'/',
                  !Ref 'DBName', "'/g\" wp-config.php\n", sed -i "s/'username_here'/',
                  !Ref 'DBUser', "'/g\" wp-config.php\n", sed -i "s/'password_here'/',
                  !Ref 'DBPassword', "'/g\" wp-config.php\n"]]
              mode: '000500'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'
        configure_wordpress:
          commands:
            01_set_mysql_root_password:
              command: !Join ['', [mysqladmin -u root password ', !Ref 'DBRootPassword',
                  '''']]
              test: !Join ['', ['$(mysql ', !Ref 'DBName', ' -u root --password=''',
                  !Ref 'DBRootPassword', ''' >/dev/null 2>&1 </dev/null); (( $? !=
                    0 ))']]
            02_create_database:
              command: !Join ['', [mysql -u root --password=', !Ref 'DBRootPassword',
                  ''' < /tmp/setup.mysql']]
              test: !Join ['', ['$(mysql ', !Ref 'DBName', ' -u root --password=''',
                  !Ref 'DBRootPassword', ''' >/dev/null 2>&1 </dev/null); (( $? !=
                    0 ))']]
            03_configure_wordpress:
              command: /tmp/create-wp-config
              cwd: /var/www/html/wordpress
    Properties:
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch,
          !Ref 'InstanceType', Arch]]
      InstanceType: !Ref 'InstanceType'
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref 'WebServerSecurityGroup'
          SubnetId: !Ref 'SubnetId'
      KeyName: !Ref 'KeyName'
      Tags:
        - Key: Name
          Value: VM-Shared-WordPress-CM
        - Key: Tenant
          Value: !Ref 'TenantTag'
        - Key: SecurityLevel
          Value: !Ref 'SecurityLevelTag'
        - Key: POC
          Value: !Ref 'POCTag'
        - Key: Creator
          Value: !Ref 'CreatorTag'
        - Key: CostCenter
          Value: !Ref 'CostCenterTag'
        - Key: Environment
          Value: !Ref 'EnviornmentTag'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --configsets wordpress_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - "\n"
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --region '
            - !Ref 'AWS::Region'
            - "\n"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
Outputs:
  WebsiteURL:
    Value: !Join ['', ['http://', !GetAtt 'WebServer.PublicDnsName', /wordpress]]
    Description: WordPress Website
